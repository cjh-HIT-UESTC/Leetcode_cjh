对于本道题 我拿到之后 首先第一个想法就是 一定需要取出字符串组的每一个字符串 所以必然需要一个for循环去取每一个字符即：
for(i的循环)
  strs[i];//去取每一个字符串
  
然后因为要对每一个字符串每一个字符挨个比较 那么很自然的 也想到了用一个循环去取每一个字符  在这里我用到了substr函数
for(j的循环)
  strs[i].substr(j,1);//第i个字符串 取出第j个位置（从0开始数）的一个字符
  
 那么已经完成了 取的任务 就要进行判断  很自然 判断分为 判断对与判断错 
 很自然 这道题如果去判断对 很复杂且不好实现  而判断错：可以知道一旦有两个字符不同就可以停止循环 直接输出已判断好的前j位
 
而这道题 很自然  要先分为 判断有无公共前缀 再判断公共前缀为多长

所以第一步 判断有无公共前缀：
于是考虑一些特殊情况：
1、当输入为空 ： []，直接输出""，可以使用size()==0
2、当输入只有一个字符串： ["a"]。直接输入strs[0],可以使用size()==1
3、当输入的字符串组中 每个首字符不同，可以判出无公共前缀，所以：
    if(strs[i].substr(0,1) != strs[i+1].substr(0,1)) 说明在首字符判断中有不同 直接输出“”

到此 特殊情况考虑结束，会输出“”的情况也考虑完了，接下来的所有情况 必是有公共前缀的情况 且输入至少2个字符串
  所以现在考虑的是循环的包含情况：
   明显 应该是j循环包含i的循环 因为每个j的值 要遍历每个字符串
   所以 ：
   for(i的循环)
    {
      for(j的循环)
    }
    
然后在循环中判断错   一旦有 strss[i].substr(j,1) != strss[i+1].substr(j,1)
就跳出循环（在这里   因为是两层循环 所以要跳两次   所以我设计了标记位 来标记是否跳出循环 并且可以用标记位来实现输出）
即strs[0].substr(0,label)
在这里！！！！！！！最重要的一点就是如何判断如果字符全部相同如何停止循环（因为如果全相同，会一直循环下去）
所以在每次循环前 加一个长度判断 如果超出了字串里面最小字符串的长度 就停止  需要注意这里标记位的数值（label-1）

本道题 我学会了
vector<string>&strs 字符串数组的取操作
substr函数的应用
利用标记位
如何判断循环的包含结构


