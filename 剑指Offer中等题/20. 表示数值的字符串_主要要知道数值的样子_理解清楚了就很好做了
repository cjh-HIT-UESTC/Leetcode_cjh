class Solution {
public:
    bool isNumber(string s) {
        //那么首先就得知道数值有哪些表示方法： 首字符可以是 数字,+,-
        //分为 ： 整数 小数 指数

        int num1=0;///用来记录有无数字出现
        int num2=0;//用来记录e的个数
        int num3=0;//用来记录小数点的个数
        int lable=0;//用来标记是否最开始前面全是空格

        int i=-1;
        for(char ch:s)
        {
            i++;
            //正负号出现的正确情况
            if(s.size()==1&&(ch=='+'||ch=='-'))    return  false;
            if( (ch=='+' ||ch=='-') && (i==0||lable==1 || s[i-1]=='e'||s[i-1]=='E') )
            {
                continue;
            }
            else if(ch=='+' ||ch=='-')
            {
                return false;
            }

            //e出现的正确情况
            if( (ch=='e'||ch=='E') && i!= 0 && ((s[i-1]-'0'>=0 && s[i-1]-'0'<=9)||s[i-1]=='.') &&i!=s.size()-1 && (s[i+1]=='+'||s[i+1]=='-'|| (s[i+1]-'0'>=0 && s[i+1]-'0'<=9)) && num2==0 )
            {
                if((s[i+1]=='+'||s[i+1]=='-') &&i+1!=s.size()-1   )
                {
                    if(s[i+2]-'0'<0 && s[i+2]-'0'>9)    return false;
                    
                }
                else if((s[i+1]=='+'||s[i+1]=='-')&& i+1==s.size()-1 )
                {
                    return false;
                }
                num2++;
                continue;
            }
            else if(ch=='e'||ch=='E')
            {
                return false;
            }

            //小数点出现的正确情况 .1是正确的
            if(s.size()==1&&ch=='.')    return  false;
            if( ((ch=='.'&&i==0 && (s[i+1]-'0'>=0 && s[i+1]-'0'<=9) ) || (ch=='.'&& i==s.size()-1 && (s[i-1]-'0'>=0 && s[i-1]-'0'<=9)) || (ch=='.' && i!=0&&i!=s.size()-1&&(s[i-1]-'0'>=0 && s[i-1]-'0'<=9)&& (s[i+1]-'0'>=0 && s[i+1]-'0'<=9)) ||(ch=='.' && i!=0&&i!=s.size()-1&&s[i+1]==' ') ||(ch=='.' && i!=0&&i!=s.size()-1&&(s[i-1]=='+'||s[i-1]=='-')) ||(ch=='.' && i!=0&&i!=s.size()-1&&(s[i+1]=='e'||s[i+1]=='E')) || (ch=='.' && i!=0&&i!=s.size()-1&&s[i-1]==' ')   ) &&num2==0&& num3==0 )
            {
                num3++;
                continue;
            }
            else if(ch=='.')
            {
                return false;
            }

////因为可能最前面一直是空格 或者最后面一直是空格 所以要改进           还要考虑全空格  意味着必须有数字出现   这样一来必须考虑前面为空格 然后再出现正号的情况
            if( ch==' ' && (i==0 ||s[i-1]==' ') )
            {
                lable=1;
                continue;
            }
            else if(ch==' ' && (i==s.size()-1 || s[i+1]==' ') )
            {
                lable=0;
                continue;
            }
            else if(ch==' ')
            {
                return false;
            }
            //当前数不是以上特定字符的话     
            if(ch-'0'<0 || ch-'0'>9)
            {
                return false;
            }    
            else
            {
                num1=1;
                lable=0;
                continue;
            }
        }
        if(num1==1)
        {
            return true;
        }
        else
        {
            return false;
        }
        

    }
};
