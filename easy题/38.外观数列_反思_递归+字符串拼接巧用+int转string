对于本题 我在手写模仿算法步骤的时候，发现了明显的递归提示：因为当前操作的字符串必须由上一次的字符串给出

首先，这道题我学会了：
  1、string 转 Int ：int a = str[1] - '0';就转为了对应的数字
  2、int 转char ：int j;      char =j + '0';就把j转为了对应的char类型
  3、int 转 string :利用函数 ： to_string(int)

在本道题最初的版本中，由于我太菜，不知道怎么对字符串就行逐个赋字符，于是就利用了char类型，定义了char chr[100]，用于存放数据
   然后再 用string s=chr  把char强转成string类型  再用substr输出前i个字符    这样导致了效率很慢 超出了时间限制
   
 在学习了字符串的拼接后，我就明白怎么做了
 首先：1、先把字符串ss初始化为空：string ss="";
      2、然后一旦找到了个数（这里利用了一点类似双指针的思想），就用字符串的拼接来构成字符串：ss += to_string(j)
      3、对于本来就是string类型的可以直接拼接：ss += ss1[i]
      4、最后需要注意的就是逻辑问题  和递归：每次处理的n都是上一个n-1给出来的结果
