在本题中，为了实现string内部任意两个字符位置互换，我先把它们取出来定义为char类型，然后利用-‘0’转变为Int类型，再采用+‘0’转回char类型，再拼接

分治：本题我开始想的定义一个函数，互换给定两个位置的数，然后把32位分割到2或4的大小，然后再利用 二进制转十进制算法 
但是由于本题的输出应该为uint_32类型，所以不能实现我的想法，但是我更一步理解了uint32_t类型：

  这种类型其实就是 无符号的int的别名，但是不同的是，它可以这样使用：直接存放二进制数：32位的二进制数，而不把它看作整数
  因为本来的无符号int型 应该也和Int一样的 那样就不能直接赋值为二进制了  所以这是它的特殊的地方  
  它不把它数字看作10进制，只看做2进制   但是输出还是输出整数值
  
  	uint32_t a = 0b00000010100101000001111010011100;
	    cout << a;输出43261596
      
      所以要直接给二进制数，在前面加上 0b,然后输出的时候是直接输出了对应的整数值
      
      
  所以本题我使用了移位：因为uint32_t的数据是32位的二进制数，所以可以用位操作然后直接相加，输出的时候输出它的整数值
    要注意的是：本题的移位的每位需要移动的位数。还有移位的前后次序
