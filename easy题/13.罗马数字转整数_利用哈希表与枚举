class Solution {
public:
    int romanToInt(string s) {
    //定义一个哈希表 实现快速查找 因为为字符+数字 所以为   <string,int>  把没种情况列举出来
    //需要注意的是  IV的值为3（5-1-1） IX的值为8（10-1-1） XC的值为80（100-10-10）
    //这是因为是两个两个遍历的 与 一个一个遍历同时进行   这样就会导致 会出现一个字符被多算（如果按真实值） 所以要抵消这种2位数的左边数的值  
        unordered_map<string, int> m = {{"I", 1}, {"IV", 3}, {"IX", 8}, {"V", 5}, {"X", 10}, {"XL", 30}, {"XC", 80}, {"L", 50}, {"C", 100}, {"CD", 300}, {"CM", 800}, {"D", 500}, {"M", 1000}};
        //函数substr 为复制s从第0位开始，取1位的字符         复制字符串
        int r = m[s.substr(0, 1)];
        for(int i=1; i<s.size(); ++i){
            string two = s.substr(i-1, 2);//从第i-1位开始  取2位       两位两位的遍历
            string one = s.substr(i, 1);//一位一位的遍历
            r += m[two] ? m[two] : m[one];//在哈希表中 找到了两位的数就加两位的数 否则加一位的数
        }
        return r;
    }
};
