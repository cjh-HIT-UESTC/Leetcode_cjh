/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    vector<int>ans;
    queue<TreeNode*>q;

public:
    vector<int> rightSideView(TreeNode* root) {
        //相当于层序遍历，但每次只把最右边的放进vector
        if(root==nullptr)   return {};
        q.emplace(root);  
        while(!q.empty()){
            int len=q.size();
            while(len!=0){
                if(q.front()->left){
                    q.emplace(q.front()->left);
                }
                if(q.front()->right){
                    q.emplace(q.front()->right);
                }
                --len;
                if(len==0){
                    ans.emplace_back(q.front()->val);
                }
                q.pop();
            }
        }
        return ans;
    }
};
