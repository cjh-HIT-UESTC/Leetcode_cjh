/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head==nullptr)   return head;
        //快慢指针
        ListNode* p=new ListNode(-1);
        ListNode* phead=p;
        ListNode* slow=head;
        ListNode* fast=head->next;

        while(fast!=nullptr){
            if(slow->val==fast->val){
                while(fast!=nullptr&&slow->val==fast->val){
                    fast=fast->next;
                }
                if(fast==nullptr){
                    slow=nullptr;
                    break;
                }
                slow=fast;
                fast=fast->next;
            }
            else{
                p->next=slow;
                p=p->next;
                slow=slow->next;
                fast=fast->next;
            }
        }
        p->next=slow;
        return phead->next;
    }
};
