class Solution {
private:
    priority_queue<int,vector<int>,greater<int>>q;
    int i;
    int len;

public:
    int findKthLargest(vector<int>& nums, int k) {
        //先选择前k个放入最小堆 这个最小堆的大小就只为k，然后再不断地判断与堆顶的大小，比堆顶大，才入堆
        i=0;
        len=nums.size();
        while(i<k){
            q.push(nums[i]);
            ++i;
        }
        for(;i<len;++i){
            if(nums[i]>q.top()){
                q.pop();
                q.push(nums[i]);
            }
        }
        return q.top();
    }
};
